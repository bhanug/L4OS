- Clean, stable, robust, and completed SOS.

- User network library.  Handled through VFS?  Internally use TCP-over-UDP?

- USB stack/driver/library.

- Pipes.

- Editor (user program, nothing to do with SOS unless it involves writing a few
more system calls).  Like red.

- Thread management.  As a note, this is what we need to have the init_thread
kill itself without a hack.

- Shared memory.

- Kernel VM 

- Port a unix tool to our OS to prove its robustness. (e.g grep or something
similar which should be complicated in function but not use to many system
calls since we are not POSIX compliant).

- Support multiple consoles.

- Support directories and properly support multiple filesystems properly. Each
directory basically should be associated somehow with a filesystem.

- Have a hard code stable program which runs and is responsible for spawning sosh.
If sosh crashes, it starts it up again... 

