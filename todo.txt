- Free L4's resources when deleting process.  This involves (as mentioned in
process.c), freeing the capabilties (to rootserver and pager), freeing the
address space, and then freeing the capability list.  Should probably check
that the whole address space for that process is being unmapped too.

- Check memory leaks in pager

- More test cases for the linked list.  Needs to be absolutely rock solid.

- This has been around for ages, but there is a security bug in copyin/out
where the user can violate read/write access permissions.  Need to write a
program to show this but won't be too hard.  Also won't be a hard fix.

- Clean up copyin/out as well, there is a lot of repetition across the two
functions and they aren't so nice anyway.

- Move process deleting back to process.c (from pager.c) if possible.  Still
want to minimise the interface to the pager though.

- More testing of killing processes at awkward times, for example in the middle
of swapping in or swapping out.

- Check exec permissions when trying to run an ELF file.

- Max clists is 16, so despite having max addrspaces as 256 it will crash
after creating something like 16 processes.  So, need to increase the #define
(pistachio/src/caps.cc) and also free the clists and all that stuff (as per
the todo above).

- Don't ever close the default swapfile, and only ever open it

