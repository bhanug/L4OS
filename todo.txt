- Very frequently SOS hangs on bootup on "waiting for PHY to become ready", with
*** sos_pager_handler: addr=0x0000000c ip=0x001488e4 sender=0
This might be our problem, not sure.  Not the same as the other unhandled page
fault that often happens (on a high address) which everybody gets and certainly
isn't our fault.

- Move MaxReader, MaxWriter and the reader, writer counters out of consolefs
into the vfs and then handle opening already open vnodes in the vfs layer
instead of having each fs handle it.
(Undecided, changes live in vfs-exp branch)

- Update crt (whatever that is) to kill a process when it finishes.  At the
moment it just pagefaults like crazy.  Apparently this is a mystery funtion
somewhere, possibly written in assembler (?).

- Need internal synchronisation of NFS, and it would make sense (compared to
what we already have) to use events.  It also would be easier to implement it
at the VFS level so may as well do it there.  I.e. VFS read and write (and who
knows maybe more?) requests get put on a queue and executed sequentially.
Incidentally we should try to produce this error before bothering to fix it.

- Fill in the missing bits from M7 we couldn't do due to not having a working
M6 - freeing allocated frames, freeing allocated slots in the swap file, and
freeing pager requests.  And freeing L4's resources (from sos_process_create).
(Btw this is pretty much done now, just need to bugcheck).

